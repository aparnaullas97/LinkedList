class LinkedList{
    Node head;
    class Node{
        int data;
        Node next;
        //constructor
        Node(int data){
            data = data;
            next = null;
        }
     }
     
     public void push(int data){
        Node newNode = new Node(data);
        newNode.next = head;
        head = newNode;
     }
     
     public void swap(int a , int b ){
        if(a == b){
            return;
        }
        
        Node prevA = null, currA = head;
        while(currA != null && currA.data != a){
            prevA = currA;
            currA.next = currA;
        }
        
        Node prevB = null, currB = head;        
        while(currB != null && currB.data != b){            
            prevB = currB;            
            currB.next = currB;        
        }
        
        if(currA == null || currB == null){
            return;
        }
        
        if(prevA != null){
            prevA.next = currB;
        }
        else
            head = currB;
            
        if(prevB != null){            
            prevB.next = currA;        
        }        
        else            
            head = currA;
            
        Node temp = currA;
        currA = currB;
        currB = temp;
    }
    
    public static void main(String [] args){
        LinkedList llist = new LinkedList();
        llist.push(1);
        llist.push(7);
        llist.push(5);
        llist.push(4);
        llist.push(2);
        llist.print();
        llist.swap(2,7);
        llist.print();
    }
}
